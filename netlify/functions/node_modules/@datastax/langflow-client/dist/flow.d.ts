import { LangflowClient } from "./index.js";
import { FlowResponse } from "./flow_response.js";
import { UploadResponse } from "./upload_response.js";
import { Tweaks, Tweak, FlowRequestOptions } from "./types.js";
export declare class Flow {
    client: LangflowClient;
    id: string;
    tweaks: Tweaks;
    constructor(client: LangflowClient, flowId: string, tweaks?: Tweaks);
    tweak(key: string, tweak: Tweak): Flow;
    run(input_value: string, options?: Partial<Omit<FlowRequestOptions, "input_value">>): Promise<FlowResponse>;
    stream(input_value: string, options?: Partial<Omit<FlowRequestOptions, "input_value">>): Promise<ReadableStream<import("./types.js").StreamEvent>>;
    uploadFile(path: string, options?: {
        signal?: AbortSignal;
    }): Promise<UploadResponse>;
}
